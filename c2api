import android.graphics.ImageFormat
import android.hardware.HardwareBuffer
import android.media.Image
import android.media.ImageReader
import android.util.Log
import java.nio.ByteBuffer

class YUVFormatChecker(private val width: Int, private val height: Int) {

    private val imageReader: ImageReader = ImageReader.newInstance(
        width, height, ImageFormat.YUV_420_888, 2
    )

    init {
        imageReader.setOnImageAvailableListener({ reader ->
            val image = reader.acquireLatestImage() ?: return@setOnImageAvailableListener
            val format = checkHardwareBufferFormat(image)
            Log.d("YUVFormat", "Detected Format: $format")
            image.close()
        }, null)
    }

    fun getImageReader(): ImageReader = imageReader

    fun checkHardwareBufferFormat(image: Image): String {
        val hardwareBuffer = image.hardwareBuffer ?: return "Unknown Format"

        return when (hardwareBuffer.format) {
            HardwareBuffer.YUV_420_888 -> {
                if (isNV12(image)) "NV12" else "NV21"
            }
            else -> "Unknown Format"
        }
    }

    private fun isNV12(image: Image): Boolean {
        val ySize = image.width * image.height
        val uvBuffer: ByteBuffer = image.planes[1].buffer
        val firstU = uvBuffer.get(0).toInt() and 0xFF
        val firstV = uvBuffer.get(1).toInt() and 0xFF
        return firstU < firstV // NV12 usually has U < V
    }
}
